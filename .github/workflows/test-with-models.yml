name: Tests with Cached Models

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test-with-models:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable, nightly]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust }}
        override: true
        components: rustfmt, clippy
    
    - name: Cache Cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Cache Model Weights
      uses: actions/cache@v3
      id: cache-models
      with:
        path: model_weights/
        key: ${{ runner.os }}-models-v1-${{ hashFiles('scripts/download_models.py') }}
        restore-keys: |
          ${{ runner.os }}-models-v1-
    
    - name: Setup Python
      if: steps.cache-models.outputs.cache-hit != 'true'
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Download Models
      if: steps.cache-models.outputs.cache-hit != 'true'
      run: |
        pip install huggingface_hub
        python scripts/download_models.py
    
    - name: Verify Models
      run: |
        ls -la model_weights/ || dir model_weights
    
    - name: Run Tests with AI Features
      run: cargo test --features ai --release
      env:
        LLMKG_USE_LOCAL_MODELS: true
        LLMKG_MODEL_WEIGHTS_DIR: model_weights
    
    - name: Run Integration Tests
      run: cargo test --test local_model_integration_tests --features ai
    
    - name: Check Code Quality
      run: |
        cargo fmt -- --check
        cargo clippy --features ai -- -D warnings

  benchmark-models:
    runs-on: ubuntu-latest
    needs: test-with-models
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    
    - name: Restore Model Cache
      uses: actions/cache@v3
      with:
        path: model_weights/
        key: ${{ runner.os }}-models-v1-${{ hashFiles('scripts/download_models.py') }}
    
    - name: Run Benchmarks
      run: cargo bench --features ai
    
    - name: Upload Benchmark Results
      uses: actions/upload-artifact@v3
      with:
        name: benchmark-results
        path: target/criterion/